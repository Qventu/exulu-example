#### GENERAL SETTINGS ####
NODE_ENV="dev" # dev or prod
ENVIRONMENT="${NODE_ENV}"
DEBUG=http-proxy-middleware*

#### CLIENT SIDE ####
FRONTEND="http://localhost:3000" # The canonical URL of your site which users access in the browser.
BACKEND="http://localhost:9001" # The domain name where the backend is available. Important this is used client side (in the browser), so should not use docker aliases.

#### SERVER SIDE ####
NEXT_BACKEND="http://localhost:9001" # IMPORTANT: if running the backend via docker container this value should be exulu-backend:9001 (when using the default docker-compose file we provide), if not running via a container it should default to http://localhost:9001

#### AUTH SETTINGS ####
NEXTAUTH_SECRET="3n/afQmVBqV7xbOboKV8sxSHJeplZMdR0/hBCo4cMcc=" # Secret used for authentication, important this should match the secret on the backend
NEXTAUTH_URL="${FRONTEND}" # Set the NEXTAUTH_URL environment variable to the canonical URL of your site.
NEXTAUTH_URL_INTERNAL="${NEXT_BACKEND}"  # If provided, server-side calls will use this instead of NEXTAUTH_URL. Useful in environments when the server doesn't have access to the canonical URL of your site. Defaults to NEXTAUTH_URL.
AUTH_MODE="password" # can be either "otp" | "password", otp enables magic links, but requires an email server to be setup below

#### POSTGRES SETTINGS ####
POSTGRES_DB_HOST=localhost # IMPORTANT: if running the backend via docker container this value should be exulu-pgvector, if not running via a container it usually defaults to localhost
POSTGRES_DB_PORT=5432
POSTGRES_DB_USER=postgres
POSTGRES_DB_PASSWORD=password
POSTGRES_DB_SSL=false
POSTGRES_DB_NAME="imp"

#### REDIS SETTINGS ####
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_USER=default
REDIS_PASS=  

#### OTEL VARIABLES ####
SIGNOZ_TRACES_URL=""
SIGNOZ_LOGS_URL=""
SIGNOZ_ACCESS_TOKEN=""

#### HUGGING FACE ENV VARIABLES ####
HF_HUB_ENABLE_HF_TRANSFER=1 # Set to True for faster uploads and downloads from the Hub using hf_transfer.
HF_HUB_ENABLE_PROGRESS_BARS=1

#### FILE HOSTING (S3 COMPATIBLE STORAGE) ####
COMPANION_S3_REGION="" # If you are using Minio in docker, you can set this in the Configuration -> Region
COMPANION_S3_KEY="" # If you are using Minio in docker, you can setup a user via Identity -> Users to get the key
COMPANION_S3_SECRET="" # If you are using Minio in docker, you can setup a user via Identity -> Users to get a secret
COMPANION_S3_BUCKET=""
COMPANION_S3_ENDPOINT="" # Set to match your S3 host, this variable is used in the backend, so if the backend is run inside a docker container make sure to specify the correct endpoint within the container network (for example exulu-minio:9000)

#### IF USING MINIO VIA A DOCKER CONTAINER ####
MINIO_ROOT_USER=""
MINIO_ROOT_PASSWORD=""